# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'm1.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
#import Class_Frame #import Ui_Class_Frame
import MySQLdb
from tkinter import filedialog
import os
from datetime import date

tlist=[]
slist=[]
snewlis=[]
classwork = []
student = []
teacher = []

def clearsli_tli():
    tlist = []
    slist = []
    print("clear tlist slist   ",slist , tlist )

class Ui_Login(object):
    def setupUi(self, Login):
        Login.setObjectName("Login")
        Login.resize(340, 561)
        Login.setMinimumSize(QtCore.QSize(340, 561))
        Login.setMaximumSize(QtCore.QSize(340, 561))
        self.log = QtWidgets.QTabWidget(Login)
        self.log.setGeometry(QtCore.QRect(0, 0, 341, 561))
        self.log.setMinimumSize(QtCore.QSize(341, 561))
        self.log.setMaximumSize(QtCore.QSize(341, 561))
        self.log.setStyleSheet("")
        self.log.setTabPosition(QtWidgets.QTabWidget.North)
        self.log.setUsesScrollButtons(False)
        self.log.setDocumentMode(False)
        self.log.setTabsClosable(False)
        self.log.setMovable(False)
        self.log.setTabBarAutoHide(False)
        self.log.setObjectName("log")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.Logbut = QtWidgets.QPushButton(self.tab)
        self.Logbut.setGeometry(QtCore.QRect(80, 330, 191, 51))
        self.Logbut.setStyleSheet("\n"
"QPushButton{\n"
"\n"
"border-radius: 10px ;\n"
"background-color: rgb(71, 147, 227);\n"
"\n"
"}")
        self.Logbut.setText("")
        self.Logbut.setObjectName("Logbut")
        self.Logbut.clicked.connect(self.gtc)
        self.L1 = QtWidgets.QLabel(self.tab)
        self.L1.setGeometry(QtCore.QRect(130, 340, 91, 31))
        self.L1.setStyleSheet("")
        self.L1.setObjectName("L1")
        self.label_2 = QtWidgets.QLabel(self.tab)
        self.label_2.setGeometry(QtCore.QRect(50, 400, 251, 21))
        self.label_2.setStyleSheet("")
        self.label_2.setObjectName("label_2")
        self.username = QtWidgets.QLineEdit(self.tab)
        self.username.setGeometry(QtCore.QRect(80, 160, 191, 31))
        self.username.setStyleSheet("border-radius: 7px ;\n"
"background-color: rgb(197, 197, 197);")
        self.username.setText("")
        self.username.setObjectName("username")
        self.userLabel = QtWidgets.QLabel(self.tab)
        self.userLabel.setGeometry(QtCore.QRect(90, 200, 121, 21))
        self.userLabel.setObjectName("userLabel")
        self.password = QtWidgets.QLineEdit(self.tab)
        self.password.setGeometry(QtCore.QRect(80, 250, 191, 31))
        self.password.setStyleSheet("background-color: rgb(197, 197, 197);\n"
"border-radius: 7px ;")
        self.password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.password.setObjectName("password")
        self.passwordlabel = QtWidgets.QLabel(self.tab)
        self.passwordlabel.setGeometry(QtCore.QRect(90, 290, 111, 21))
        self.passwordlabel.setObjectName("passwordlabel")
        self.logo = QtWidgets.QLabel(self.tab)
        self.logo.setGeometry(QtCore.QRect(130, 20, 81, 61))
        self.logo.setText("")
        self.logo.setPixmap(QtGui.QPixmap("../logo.png"))
        self.logo.setObjectName("logo")
        self.log.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.user = QtWidgets.QLineEdit(self.tab_2)
        self.user.setGeometry(QtCore.QRect(60, 100, 221, 31))
        self.user.setStyleSheet("background-color: rgb(197, 197, 197);\n"
"border-radius: 7px;")
        self.user.setObjectName("user")
        self.passwoed = QtWidgets.QLineEdit(self.tab_2)
        self.passwoed.setGeometry(QtCore.QRect(60, 290, 221, 31))
        self.passwoed.setStyleSheet("background-color: rgb(197, 197, 197);\n"
"border-radius: 7px;")
        self.passwoed.setEchoMode(QtWidgets.QLineEdit.Password)
        self.passwoed.setObjectName("passwoed")
        self.confpass = QtWidgets.QLineEdit(self.tab_2)
        self.confpass.setGeometry(QtCore.QRect(60, 360, 221, 31))
        self.confpass.setStyleSheet("background-color: rgb(197, 197, 197);\n"
"border-radius: 7px;")
        self.confpass.setEchoMode(QtWidgets.QLineEdit.Password)
        self.confpass.setObjectName("confpass")
        self.email = QtWidgets.QLineEdit(self.tab_2)
        self.email.setGeometry(QtCore.QRect(60, 220, 221, 31))
        self.email.setStyleSheet("background-color: rgb(197, 197, 197);\n"
"border-radius: 7px;")
        self.email.setObjectName("email")
        self.userlabel = QtWidgets.QLabel(self.tab_2)
        self.userlabel.setGeometry(QtCore.QRect(70, 130, 121, 21))
        self.userlabel.setObjectName("userlabel")
        self.email_label = QtWidgets.QLabel(self.tab_2)
        self.email_label.setGeometry(QtCore.QRect(70, 250, 121, 21))
        self.email_label.setObjectName("email_label")
        self.pass_label = QtWidgets.QLabel(self.tab_2)
        self.pass_label.setGeometry(QtCore.QRect(70, 320, 121, 21))
        self.pass_label.setObjectName("pass_label")
        self.cp_label = QtWidgets.QLabel(self.tab_2)
        self.cp_label.setGeometry(QtCore.QRect(70, 390, 121, 21))
        self.cp_label.setObjectName("cp_label")
        self.Signup = QtWidgets.QPushButton(self.tab_2)
        self.Signup.setGeometry(QtCore.QRect(70, 430, 211, 51))
        self.Signup.setStyleSheet("\n"
"QPushButton{\n"
"\n"
"border-radius: 10px ;\n"
"background-color: rgb(71, 147, 227);\n"
"\n"
"}")
        self.Signup.setText("")
        self.Signup.setObjectName("Signup")
        self.Signup.clicked.connect(self.sgup)
        self.signUplabel = QtWidgets.QLabel(self.tab_2)
        self.signUplabel.setGeometry(QtCore.QRect(120, 440, 111, 31))
        self.signUplabel.setStyleSheet("")
        self.signUplabel.setObjectName("signUplabel")
        self.logo_2 = QtWidgets.QLabel(self.tab_2)
        self.logo_2.setGeometry(QtCore.QRect(130, 20, 81, 61))
        self.logo_2.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.logo_2.setText("")
        self.logo_2.setPixmap(QtGui.QPixmap("../logo.png"))
        self.logo_2.setObjectName("logo_2")
        self.firstname = QtWidgets.QLineEdit(self.tab_2)
        self.firstname.setGeometry(QtCore.QRect(60, 160, 61, 31))
        self.firstname.setStyleSheet("background-color: rgb(197, 197, 197);\n"
"border-radius: 7px;")
        self.firstname.setObjectName("firstname")
        self.lastname = QtWidgets.QLineEdit(self.tab_2)
        self.lastname.setGeometry(QtCore.QRect(220, 160, 61, 31))
        self.lastname.setStyleSheet("background-color: rgb(197, 197, 197);\n"
"border-radius: 7px;")
        self.lastname.setObjectName("lastname")
        self.firstlabel = QtWidgets.QLabel(self.tab_2)
        self.firstlabel.setGeometry(QtCore.QRect(60, 190, 61, 21))
        self.firstlabel.setObjectName("firstlabel")
        self.Last_label = QtWidgets.QLabel(self.tab_2)
        self.Last_label.setGeometry(QtCore.QRect(220, 190, 71, 21))
        self.Last_label.setObjectName("Last_label")
        self.middlename = QtWidgets.QLineEdit(self.tab_2)
        self.middlename.setGeometry(QtCore.QRect(140, 160, 61, 31))
        self.middlename.setStyleSheet("background-color: rgb(197, 197, 197);\n"
"border-radius: 7px;")
        self.middlename.setObjectName("middlename")
        self.middle_label = QtWidgets.QLabel(self.tab_2)
        self.middle_label.setGeometry(QtCore.QRect(130, 190, 71, 21))
        self.middle_label.setObjectName("middle_label")
        self.label = QtWidgets.QLabel(self.tab_2)
        self.label.setGeometry(QtCore.QRect(40, 495, 241, 21))
        self.label.setObjectName("label")
        self.log.addTab(self.tab_2, "")

        self.retranslateUi(Login)
        self.log.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(Login)

    def retranslateUi(self, Login):
        _translate = QtCore.QCoreApplication.translate
        Login.setWindowTitle(_translate("Login", "Frame"))
        self.L1.setText(_translate("Login", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt; font-weight:600; color:#fefefe;\">Login</span></p></body></html>"))
        self.label_2.setText(_translate("Login", "<html><head/><body><p align=\"center\"><br/></p></body></html>"))
        self.username.setPlaceholderText(_translate("Login", "username"))
        self.userLabel.setText(_translate("Login", "<html><head/><body><p><span style=\" font-weight:600; color:#4793e3;\">   Username</span></p></body></html>"))
        self.password.setPlaceholderText(_translate("Login", "password"))
        self.passwordlabel.setText(_translate("Login", "<html><head/><body><p><span style=\" font-weight:600; color:#4793e3;\">Password</span></p></body></html>"))
        self.log.setTabText(self.log.indexOf(self.tab), _translate("Login", "Login"))
        self.user.setPlaceholderText(_translate("Login", "username"))
        self.passwoed.setPlaceholderText(_translate("Login", "password"))
        self.confpass.setPlaceholderText(_translate("Login", "confirm password"))
        self.email.setPlaceholderText(_translate("Login", "email@e.com"))
        self.userlabel.setText(_translate("Login", "<html><head/><body><p><span style=\" font-weight:600; color:#4793e3;\">   Username</span></p></body></html>"))
        self.email_label.setText(_translate("Login", "<html><head/><body><p><span style=\" font-weight:600; color:#4793e3;\">Email</span></p></body></html>"))
        self.pass_label.setText(_translate("Login", "<html><head/><body><p><span style=\" font-weight:600; color:#4793e3;\">Password</span></p></body></html>"))
        self.cp_label.setText(_translate("Login", "<html><head/><body><p><span style=\" font-weight:600; color:#4793e3;\">Confirm Password</span></p></body></html>"))
        self.signUplabel.setText(_translate("Login", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt; font-weight:600; color:#fefefe;\">Sign Up</span></p></body></html>"))
        self.firstname.setPlaceholderText(_translate("Login", "Name"))
        self.lastname.setPlaceholderText(_translate("Login", "surname"))
        self.firstlabel.setText(_translate("Login", "<html><head/><body><p><span style=\" font-weight:600; color:#4793e3;\">First Name</span></p></body></html>"))
        self.Last_label.setText(_translate("Login", "<html><head/><body><p><span style=\" font-weight:600; color:#4793e3;\">Last Name</span></p></body></html>"))
        self.middlename.setPlaceholderText(_translate("Login", "Name"))
        self.middle_label.setText(_translate("Login", "<html><head/><body><p><span style=\" font-weight:600; color:#4793e3;\">Middle Name</span></p></body></html>"))
        self.label.setText(_translate("Login", "<html><head/><body><p><br/></p></body></html>"))
        self.log.setTabText(self.log.indexOf(self.tab_2), _translate("Login", "Sign up"))


    def gtc(self):
        
        self.use1 = self.username.text()
        try:
            conn =  MySQLdb.connect(host="localhost" ,database="class_proj" , user="root" , password="" )
            cursor = conn.cursor()
            cursor.execute("select * from User where username='"+self.use1+"' and password='"+self.password.text()+"'")
            row = cursor.fetchone()
        except Exception as obj :
            print(obj)
            print("error in sql")
        finally:
            cursor.close()
            conn.close()
        try :   
            if row is not None :
                Login.close()
                self.ui3 = Ui_Class_Frame(self.use1)
                self.ui3.setupUi(Class_Frame)
                Class_Frame.show()
                print(row)
            
            else:
                self.label_2.setText("Invalid Username or Password")

        except Exception as obj :
            print(obj)
            
    def sgup(self):
        
        print("executing")
        
        self.use1 = self.user.text()
        self.g1 = self.email.text()
        self.p1 = self.passwoed.text()
        self.f1 = self.firstname.text()
        self.m1 = self.middlename.text()
        self.l1 = self.lastname.text()
        conn =  MySQLdb.connect(host="localhost" ,database="class_proj" , user="root" , password="" )
        cursor = conn.cursor()
        ins = "INSERT INTO `user` (`Username`, `gmail`, `Password`, `Fname`, `Mname`, `Lname`)  "
        val = " VALUES ('"+self.use1+"', '"+self.g1+"','"+self.p1+"','"+self.f1+"','"+self.m1+"','"+self.l1+"');"
        sql = ins + val
        try :
            cursor.execute(sql)
            conn.commit()
            print("successfully signup")
            self.label.setText("successfully signup")
        except:
            conn.rollback()
            print("username is already exist")
            self.label.setText("username is already exist")
        cursor.close()
        conn.close()

            
                    
        
class Ui_Class_Frame(object):
    username=""
    
    def __init__(self , user ):
        self.username = user 
        print(self.username)


    def setupUi(self, Class_Frame):
        Class_Frame.setObjectName("Class_Frame")
        Class_Frame.resize(994, 661)
        self.logout = QtWidgets.QPushButton(Class_Frame)
        self.logout.setGeometry(QtCore.QRect(840, 20, 121, 41))
        self.logout.setStyleSheet("background-color: rgb(27, 147, 227);\n"
"border-radius:10px;\n"
"font-size:14pt;font-weight:600; color:white ;\n"
"\n"
"")
        conn =  MySQLdb.connect(host="localhost" ,database="class_proj" , user="root" , password="" )
        cursor = conn.cursor()

        cursor.execute("SELECT course.scode ,course.username ,subject.Sname\n"
                       "FROM course Inner JOIN subject ON course.Scode = subject.Scode\n"
                       "Where course.Username = '"+self.username+"'")
        row = cursor.fetchone()

        while row is not None :
            slist.append(row)
            row = cursor.fetchone()


        cursor.execute("SELECT * FROM `subject` WHERE username='"+self.username+"' ")
        row1 = cursor.fetchone()
    
        while row1 is not None :
            tlist.append(row1)
            row1 = cursor.fetchone()
        print(slist, tlist)
        cursor.close()
        conn.close()
        
        self.logout.setObjectName("logout")
        self.logout.clicked.connect(self.gotologin)
        self.escode = QtWidgets.QLineEdit(Class_Frame)
        self.escode.setGeometry(QtCore.QRect(40, 20, 171, 41))
        self.escode.setStyleSheet("background-color: rgb(197, 197, 197);\n"
"border-radius:10px;")
        self.escode.setObjectName("escode")
        self.add = QtWidgets.QPushButton(Class_Frame)
        self.add.setGeometry(QtCore.QRect(240, 20, 121, 41))
        self.add.setStyleSheet("background-color: rgb(27, 147, 227);\n"
"border-radius:10px;\n"
"font-size:14pt;font-weight:600; color:white ;\n"
"\n"
"")
        self.add.setObjectName("add")
        self.add.clicked.connect(self.addclass)
        self.create = QtWidgets.QPushButton(Class_Frame)
        self.create.setGeometry(QtCore.QRect(510, 20, 181, 41))
        self.create.setStyleSheet("background-color: rgb(27, 147, 227);\n"
"border-radius:10px;\n"
"font-size:14pt;font-weight:600; color:white ;\n"
"\n"
"")
        self.create.setObjectName("create")
        self.teacherclist = QtWidgets.QListWidget(Class_Frame)
        self.teacherclist.setGeometry(QtCore.QRect(120, 150, 311, 431))
        self.teacherclist.setStyleSheet("background-color: rgb(221, 221, 221);\n"
"border-radius:15px;font-size:14pt;font-weight:600; color: rgb(27, 147, 227) ;")
        self.teacherclist.setObjectName("teacherclist")
        self.studentclist = QtWidgets.QListWidget(Class_Frame)
        self.studentclist.setGeometry(QtCore.QRect(575, 150, 301, 431))
        self.studentclist.setStyleSheet("background-color: rgb(221, 221, 221);\n"
"border-radius:15px; font-size:14pt ; font-weight:600; color: rgb(27, 147, 227)  ;")
        self.studentclist.setObjectName("studentclist")
        self.studentclist.itemClicked.connect(self.enterasstudent)
        self.label = QtWidgets.QLabel(Class_Frame)
        self.label.setGeometry(QtCore.QRect(130, 110, 191, 21))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Class_Frame)
        self.label_2.setGeometry(QtCore.QRect(590, 110, 201, 21))
        self.label_2.setObjectName("label_2")

        self.retranslateUi(Class_Frame)

        for t12 in tlist :
            self.teacherclist.addItem(t12[0]+"    "+t12[1])

        for t12 in slist :
            self.studentclist.addItem(t12[0]+"    "+t12[2])
    
        QtCore.QMetaObject.connectSlotsByName(Class_Frame)
        self.create.clicked.connect(self.AddSub)
        
        self.teacherclist.itemClicked.connect(self.enterasteacher)
        
    def retranslateUi(self, Class_Frame):
        _translate = QtCore.QCoreApplication.translate
        Class_Frame.setWindowTitle(_translate("Class_Frame", "Frame"))
        self.logout.setText(_translate("Class_Frame", "Logout"))
        self.escode.setPlaceholderText(_translate("Class_Frame", "Enter Scode"))
        self.add.setText(_translate("Class_Frame", "ADD"))
        self.create.setText(_translate("Class_Frame", "Create Class"))
        self.label.setText(_translate("Class_Frame", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:600; color:#1b93e3;\">Subject as teacher</span></p></body></html>"))
        self.label_2.setText(_translate("Class_Frame", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:600; color:#1b93e3;\">Subject as student</span></p></body></html>"))

    def addclass(self):
        print("class is adding")
    
        conn =  MySQLdb.connect(host="localhost" ,database="class_proj" , user="root" , password="" )
        cursor = conn.cursor()
        ins = "INSERT INTO `course` "
        val = " VALUES ('"+self.escode.text()+"', '"+self.username+"');"
        sql = ins + val
        try :
            cursor.execute(sql)
            conn.commit()
            print("successfully adding class")
            
        except:
            conn.rollback()
        cursor.close()
        conn.close()
    def gotologin(self):
        try:
            Class_Frame.close()
            for t12 in range(0,len(tlist)-1) :
                self.teacherclist.takeItem(t12)

            for t12 in range(0,len(slist)-1) :
                self.studentclist.takeItem(t12)
            self.teacherclist.clear()
            self.studentclist.clear()
            clearsli_tli()     
            Login.show()
        except Exception as obj :
            print(obj)

    def createclass(self):
        
        print("go to create class frame")
        
    def enterasstudent(self):
        try:
            for i in self.studentclist.selectedItems() :
                snewlis.append(i.text())
            print(snewlis)
            print("enterasstudent" , snewlis[0][:5] , self.username,snewlis[0][9:] )
            #self.m = Gotocl(self.username , snewlis[0][:5])
            self.ui4 = Ui_studentclass(self.username , snewlis[0][:5] , snewlis[0][9:] )
            self.ui4.setupUi(studentclass)
            studentclass.show()
        except Exception as obj :
            print(obj)

    def enterasteacher(self):
        tlis1 = []
        try:
            for i in self.teacherclist.selectedItems() :
                tlis1.append(i.text())
            print(tlis1)
            print("enterasstudent" , tlis1[0][:5] , self.username,tlis1[0][9:] )
            #self.m = Gotocl(self.username , tlis1[0][:5])
            self.ui5 = Ui_teacherclass(self.username , tlis1[0][:5] , tlis1[0][9:] )
            self.ui5.setupUi(teacherclass)
            teacherclass.show()
        except Exception as obj :
            print(obj)

    def AddSub(self):
        try :
            self.ui5 = Ui_Addclass(self.username)
            self.ui5.setupUi(Addclass)
            Addclass.show()
        except Exception as obj :
            print(obj)
  
class Ui_studentclass(object):
    user = "" 
    def __init__(self, use  , sco , snam ):
        self.user = use
        self.scode = sco
        self.sname = snam
        print(self.user , self.scode , self.sname )

        conn =  MySQLdb.connect(host="localhost" ,database="class_proj" , user="root" , password="" )
        cursor = conn.cursor()
    
        cursor.execute("SELECT Scode , due_date , details , Coursework_id , max_points  FROM `coursework` WHERE `Scode` = '"+self.scode+"'")
        row = cursor.fetchone()

        while row is not None :
            classwork.append(row)
            row = cursor.fetchone()
        print(classwork)
        cursor.execute("SELECT * FROM `course` WHERE `Scode` = '"+self.scode+"'")
        row = cursor.fetchone()

        while row is not None :
            student.append(row)
            row = cursor.fetchone()
        print(student)

        cursor.execute("SELECT * FROM `subject` WHERE `Scode` = '"+self.scode+"'")
        row = cursor.fetchone()

        while row is not None :
            teacher.append(row)
            row = cursor.fetchone()
        print(teacher)
        
        
    def setupUi(self, studentclass):
        studentclass.setObjectName("studentclass")
        studentclass.resize(1089, 709)
        studentclass.setMinimumSize(QtCore.QSize(1089, 709))
        studentclass.setMaximumSize(QtCore.QSize(1089, 709))
        studentclass.setStyleSheet("")
        self.tabWidget = QtWidgets.QTabWidget(studentclass)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 1091, 711))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.widget = QtWidgets.QWidget(self.tab)
        self.widget.setGeometry(QtCore.QRect(60, 30, 961, 211))
        self.widget.setStyleSheet("background-color: rgb(27, 147, 227);\n"
"border-radius: 25px;")
        self.widget.setObjectName("widget")
        self.label_6 = QtWidgets.QLabel(self.widget)
        self.label_6.setGeometry(QtCore.QRect(90, 30, 521, 51))
        self.label_6.setObjectName("label_6")
        self.scrollArea_2 = QtWidgets.QScrollArea(self.tab)
        self.scrollArea_2.setGeometry(QtCore.QRect(60, 280, 211, 271))
        self.scrollArea_2.setStyleSheet("\n"
"background-color: rgb(221, 221, 221);\n"
"border-radius: 25px; ")
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollArea_2.setObjectName("scrollArea_2")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 211, 271))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.label_7 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.label_7.setGeometry(QtCore.QRect(30, 20, 161, 41))
        self.label_7.setObjectName("label_7")
        self.scrollArea_2.setWidget(self.scrollAreaWidgetContents_2)
        self.listView_3 = QtWidgets.QListView(self.tab)
        self.listView_3.setGeometry(QtCore.QRect(320, 280, 691, 371))
        self.listView_3.setStyleSheet("background-color: rgb(221, 221, 221);\n"
"border-radius: 25px;")
        self.listView_3.setObjectName("listView_3")
        self.tabWidget.addTab(self.tab, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.listWidget = QtWidgets.QListWidget(self.tab_3)
        self.listWidget.setGeometry(QtCore.QRect(170, 30, 781, 611))
        self.listWidget.setStyleSheet("background-color: rgb(221, 221, 221);\n"
"border-radius: 25px; font-size:14pt;font-weight:600; color: rgb(27, 147, 227) ;")
        self.listWidget.setObjectName("listWidget")
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.label_10 = QtWidgets.QLabel(self.tab_2)
        self.label_10.setGeometry(QtCore.QRect(120, 30, 161, 31))
        self.label_10.setObjectName("label_10")
        self.label_20 = QtWidgets.QLabel(self.tab_2)
        self.label_20.setGeometry(QtCore.QRect(120, 260, 161, 31))
        self.label_20.setObjectName("label_20")
        self.listView = QtWidgets.QListWidget(self.tab_2)
        self.listView.setGeometry(QtCore.QRect(120, 90, 881, 131))
        self.listView.setStyleSheet("background-color: rgb(221, 221, 221);\n"
"border-radius: 25px; font-size:14pt;font-weight:600; color: rgb(100, 100, 100) ;")
        self.listView.setObjectName("listView")
        self.listView_2 = QtWidgets.QListWidget(self.tab_2)
        self.listView_2.setGeometry(QtCore.QRect(120, 310, 881, 301))
        self.listView_2.setStyleSheet("background-color: rgb(221, 221, 221);\n"
"border-radius: 25px; font-size:14pt;font-weight:600; color: rgb(100, 100, 100) ;")
        self.listView_2.setObjectName("listView_2")
        self.tabWidget.addTab(self.tab_2, "")

        self.retranslateUi(studentclass)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(studentclass)

        self.listWidget.itemClicked.connect(self.gt_dow)

        for t12 in classwork :
            self.listWidget.addItem("              "+t12[3]+"              "+t12[1])

        for t12 in student :
            self.listView_2.addItem( "  "+t12[1]  )

        for t12 in teacher :
            self.listView.addItem( "  "+t12[2]  )

            
    def retranslateUi(self, studentclass):
        _translate = QtCore.QCoreApplication.translate
        studentclass.setWindowTitle(_translate("studentclass", "Frame"))
        self.label_6.setText(_translate("studentclass", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:28pt; font-weight:600; color:#ffffff;\">"+self.sname+"</span></p></body></html>"))
        self.label_7.setText(_translate("studentclass", "<html><head/><body><p><span style=\" font-size:16pt; font-weight:600; color:#1b93e3;\">Upcoming</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("studentclass", "Stream"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("studentclass", "Classwork"))
        self.label_10.setText(_translate("studentclass", "<html><head/><body><p><span style=\" font-size:16pt; font-weight:600; color:#1b93e3;\">Teacher</span></p></body></html>"))
        self.label_20.setText(_translate("studentclass", "<html><head/><body><p><span style=\" font-size:16pt; font-weight:600; color:#1b93e3;\">Classmates</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("studentclass", "People"))

    def gt_dow(self) :
        try:
            print("going to dow" )
            newlis = []
            for i in self.listWidget.selectedItems() :
                newlis.append(i.text())
            print(newlis)
            print("enterasstudent" , self.user, self.scode , self.sname , newlis[0][14:19] , newlis[0][33:] )
            self.ui = Ui_Dow_frame( self.user, self.scode , self.sname , newlis[0][14:19] , newlis[0][33:])
            self.ui.setupUi(Dow_frame)
            Dow_frame.show()
        except Exception as obj :
            print(obj)


class Ui_Dow_frame(object):
    def __init__(self, use  , sco , snam , coi ,du ):
        self.user = use
        self.scode = sco
        self.sname = snam
        self.coid = coi
        self.due = du
        print(self.user, self.scode, self.sname, self.coid, self.due)
    def setupUi(self, Dow_frame):
        Dow_frame.setObjectName("Dow_frame")
        Dow_frame.resize(1003, 537)
        self.widget = QtWidgets.QWidget(Dow_frame)
        self.widget.setGeometry(QtCore.QRect(420, 50, 281, 181))
        self.widget.setStyleSheet("background-color: rgb(217, 217, 217);\n"
"border-radius: 15px;")
        self.widget.setObjectName("widget")
        self.Submit = QtWidgets.QPushButton(self.widget)
        self.Submit.setGeometry(QtCore.QRect(30, 40, 221, 61))
        self.Submit.setStyleSheet("background-color: rgb(27, 147, 227);\n"
"border-radius: 10px ; \n"
"font-size:14pt;font-weight:600; color: white ;")
        self.Submit.setObjectName("Submit")
        self.label1 = QtWidgets.QLabel(self.widget)
        self.label1.setGeometry(QtCore.QRect(40, 110, 191, 31))
        self.label1.setText("")
        self.label1.setObjectName("label1")
        self.label_2 = QtWidgets.QLabel(Dow_frame)
        self.label_2.setGeometry(QtCore.QRect(90, 110, 241, 41))
        self.label_2.setObjectName("label_2")
        self.textEdit = QtWidgets.QTextEdit(Dow_frame)
        self.textEdit.setGeometry(QtCore.QRect(60, 250, 641, 131))
        self.textEdit.setStyleSheet("background-color: rgb(217, 217, 217);\n"
"border-radius: 10px ;")
        self.textEdit.setObjectName("textEdit")
        self.download = QtWidgets.QPushButton(Dow_frame)
        self.download.setGeometry(QtCore.QRect(370, 400, 131, 41))
        self.download.setStyleSheet("background-color: rgb(27, 147, 227);\n"
"border-radius: 10px ; \n"
"font-size:14pt;font-weight:600; color: white ;")
        self.download.setObjectName("download")
        self.label_3 = QtWidgets.QLabel(Dow_frame)
        self.label_3.setGeometry(QtCore.QRect(130, 400, 211, 31))
        self.label_3.setObjectName("label_3")

        self.retranslateUi(Dow_frame)
        QtCore.QMetaObject.connectSlotsByName(Dow_frame)

        self.download.clicked.connect(self.dow_data)
        self.Submit.clicked.connect(self.up_data)

    def retranslateUi(self, Dow_frame):
        _translate = QtCore.QCoreApplication.translate
        Dow_frame.setWindowTitle(_translate("Dow_frame", "Frame"))
        self.Submit.setText(_translate("Dow_frame", "submit"))
        self.label_2.setText(_translate("Dow_frame", "<html><head/><body><p><span style=\" font-size:24pt; font-weight:600; color:#4793e3;\">"+self.coid+"</span></p></body></html>"))
        self.textEdit.setHtml(_translate("Dow_frame", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">  zzx    d f weqf</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">afafafeq </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">gt we gwtwertgwe werwd</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">gdgrgwr ty</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"> fgwrgwert </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"> w</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">rgwergwergwrghwrghwrhr</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">g</p></body></html>"))
        self.download.setText(_translate("Dow_frame", "Download"))
        self.label_3.setText(_translate("Dow_frame", "<html><head/><body><p><span style=\" font-size:16pt; font-weight:600; color:#4793e3;\">"+self.coid+".docx</span></p></body></html>"))

    def dow_data(self):
        print("dow_data")
        fn = filedialog.asksaveasfilename(initialdir=os.getcwd()  ,title="Select file", filetypes=(("Txt File", "*.txt" ) , ("All File", "*.*" ) ))
        conn =  MySQLdb.connect(host="localhost" ,database="class_proj" , user="root" , password="" )
        cursor = conn.cursor()
        sql = "SELECT * FROM `submissions` WHERE `Username` = '"+self.user+"' AND `Coursework_id`='"+self.coid+"'"
        cursor.execute(sql)
        r = cursor.fetchall()
        print("this is r ",r)
        data = r[0][4]
        with open(fn , "wb") as f:
            f.write(data)
        f.close()

    def up_data(self):
        print("up_data")
        fn = filedialog.askopenfilename(title="Select file", filetypes=(("Txt File", "*.txt" ), ("All File", "*.*" ) ))
        data = ""
        with open(fn,"rb") as f :
           data = f.read()
        print(data)
        try :
            conn =  MySQLdb.connect(host="localhost" ,database="class_proj" , user="root" , password="" )
            cursor = conn.cursor()
            ins = "INSERT INTO `submissions` (`Scode`, `Username`, `Sdate`, `Coursework_id`, `work_done`, `marks`) VALUES ('"+self.scode+"', '"+self.user+"', '"+str(date.today() ) +"', '"+self.coid+"', %s , '0'); "
            cursor.execute(ins,(data , ))
            conn.commit()
        except Exception as obj :
            print(obj)
        finally:
            conn.close()

class Ui_Addclass(object):
    def __init__(self ,use) :
        self.user = use
        
    def setupUi(self, Addclass):
        Addclass.setObjectName("Addclass")
        Addclass.resize(355, 625)
        self.addclass = QtWidgets.QPushButton(Addclass)
        self.addclass.setGeometry(QtCore.QRect(100, 410, 151, 61))
        self.addclass.setStyleSheet("background-color:rgb(47 , 147 , 227 rgb(47, 147, 227)) ;\n"
"border-radius: 25px;\n"
"font-size:24pt;font-weight:600; color:white ;\n"
"")
        self.addclass.setObjectName("addclass")
        self.label = QtWidgets.QLabel(Addclass)
        self.label.setGeometry(QtCore.QRect(80, 500, 191, 21))
        self.label.setText("")
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(Addclass)
        self.lineEdit.setGeometry(QtCore.QRect(60, 170, 231, 41))
        self.lineEdit.setStyleSheet("background-color: rgb(221, 221, 221);\n"
"border-radius: 15px;")
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(Addclass)
        self.lineEdit_2.setGeometry(QtCore.QRect(60, 280, 231, 41))
        self.lineEdit_2.setStyleSheet("background-color: rgb(221, 221, 221);\n"
"border-radius: 15px;")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_2 = QtWidgets.QLabel(Addclass)
        self.label_2.setGeometry(QtCore.QRect(10, 10, 121, 31))
        self.label_2.setObjectName("label_2")

        self.retranslateUi(Addclass)
        QtCore.QMetaObject.connectSlotsByName(Addclass)

        self.addclass.clicked.connect(self.addd)

    def retranslateUi(self, Addclass):
        _translate = QtCore.QCoreApplication.translate
        Addclass.setWindowTitle(_translate("Addclass", "Frame"))
        self.addclass.setText(_translate("Addclass", "Add"))
        self.lineEdit.setPlaceholderText(_translate("Addclass", "subject name"))
        self.lineEdit_2.setPlaceholderText(_translate("Addclass", "subject code like asdfg 5 character only"))
        self.label_2.setText(_translate("Addclass", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:600; color:#1ea5ff;\">user: "+self.user+"</span></p></body></html>"))

    def addd(self):
        try :
            conn =  MySQLdb.connect(host="localhost" ,database="class_proj" , user="root" , password="" )
            cursor = conn.cursor()
            print(self.lineEdit_2.text(), self.lineEdit.text() ,self.user)
            cursor.execute("INSERT INTO `subject` (`Scode`, `Sname`, `Username`) VALUES ('"+self.lineEdit_2.text()+"', '"+self.lineEdit.text()+"', '"+self.user+"')")
            conn.commit()
            conn.close()
            
        except Exception as obj :
            print(obj)

class Ui_teacherclass(object):
    
    def __init__(self , use , sco ,snam ):
        self.user = use
        self.scode = sco
        self.sname =snam
        conn =  MySQLdb.connect(host="localhost" ,database="class_proj" , user="root" , password="" )
        cursor = conn.cursor()
    
        cursor.execute("SELECT Scode , due_date , details , Coursework_id , max_points  FROM `coursework` WHERE `Scode` = '"+self.scode+"'")
        row = cursor.fetchone()
        self.classwor = []
        self.stu = []
        self.tea = []
        while row is not None :
            self.classwor.append(row)
            row = cursor.fetchone()
        print(self.classwor)
        cursor.execute("SELECT * FROM `course` WHERE `Scode` = '"+self.scode+"'")
        row = cursor.fetchone()

        while row is not None :
            self.stu.append(row)
            row = cursor.fetchone()
        print(self.stu)

        cursor.execute("SELECT * FROM `subject` WHERE `Scode` = '"+self.scode+"'")
        row = cursor.fetchone()

        while row is not None :
            self.tea.append(row)
            row = cursor.fetchone()
        print(self.tea)
        
    def setupUi(self, teacherclass):
        teacherclass.setObjectName("teacherclass")
        teacherclass.resize(1089, 709)
        teacherclass.setMinimumSize(QtCore.QSize(1089, 709))
        teacherclass.setMaximumSize(QtCore.QSize(1089, 709))
        teacherclass.setStyleSheet("")
        self.tabWidget = QtWidgets.QTabWidget(teacherclass)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 1091, 711))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.widget = QtWidgets.QWidget(self.tab)
        self.widget.setGeometry(QtCore.QRect(60, 30, 961, 211))
        self.widget.setStyleSheet("background-color: rgb(27, 147, 227);\n"
"border-radius: 25px;")
        self.widget.setObjectName("widget")
        self.label_6 = QtWidgets.QLabel(self.widget)
        self.label_6.setGeometry(QtCore.QRect(90, 30, 521, 51))
        self.label_6.setObjectName("label_6")
        self.scrollArea_2 = QtWidgets.QScrollArea(self.tab)
        self.scrollArea_2.setGeometry(QtCore.QRect(60, 280, 211, 271))
        self.scrollArea_2.setStyleSheet("\n"
"background-color: rgb(221, 221, 221);\n"
"border-radius: 25px; ")
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollArea_2.setObjectName("scrollArea_2")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 211, 271))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.label_7 = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.label_7.setGeometry(QtCore.QRect(30, 20, 161, 41))
        self.label_7.setObjectName("label_7")
        self.scrollArea_2.setWidget(self.scrollAreaWidgetContents_2)
        self.listView_3 = QtWidgets.QListView(self.tab)
        self.listView_3.setGeometry(QtCore.QRect(320, 280, 691, 371))
        self.listView_3.setStyleSheet("background-color: rgb(221, 221, 221);\n"
"border-radius: 25px;")
        self.listView_3.setObjectName("listView_3")
        self.tabWidget.addTab(self.tab, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.listWidget = QtWidgets.QListWidget(self.tab_3)
        self.listWidget.setGeometry(QtCore.QRect(610, 30, 391, 611))
        self.listWidget.setStyleSheet("background-color: rgb(221, 221, 221);\n"
"border-radius: 25px;font-size:14pt;font-weight:600; color: rgb(100, 100, 100) ;")
        self.listWidget.setObjectName("listWidget")
        self.lineEdit = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit.setGeometry(QtCore.QRect(90, 150, 341, 41))
        self.lineEdit.setStyleSheet("background-color: rgb(221, 221, 221);\n"
"border-radius: 15px;\n"
"font-size:14pt;font-weight:600; color: rgb(100, 100, 100) ;")
        self.lineEdit.setObjectName("lineEdit")
        self.label = QtWidgets.QLabel(self.tab_3)
        self.label.setGeometry(QtCore.QRect(90, 90, 241, 31))
        self.label.setObjectName("label")
        self.upassign = QtWidgets.QPushButton(self.tab_3)
        self.upassign.setGeometry(QtCore.QRect(90, 370, 341, 61))
        self.upassign.setStyleSheet("background-color:rgb(47 , 147 , 227 rgb(47, 147, 227)) ;\n"
"border-radius: 25px;\n"
"font-size:14pt;font-weight:600; color:white ;\n"
"")
        self.upassign.setObjectName("upassign")
        self.label_2 = QtWidgets.QLabel(self.tab_3)
        self.label_2.setGeometry(QtCore.QRect(90, 210, 131, 31))
        self.label_2.setObjectName("label_2")
        self.dateEdit = QtWidgets.QDateEdit(self.tab_3)
        self.dateEdit.setGeometry(QtCore.QRect(100, 270, 251, 41))
        self.dateEdit.setStyleSheet("background-color:  rgb(227, 227, 227) ;\n"
"border-radius: 15px;\n"
"font-size:14pt;font-weight:600; color:rgb(47, 147, 227) ;\n"
"")
        self.dateEdit.setObjectName("dateEdit")
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.label_10 = QtWidgets.QLabel(self.tab_2)
        self.label_10.setGeometry(QtCore.QRect(120, 30, 161, 31))
        self.label_10.setObjectName("label_10")
        self.label_20 = QtWidgets.QLabel(self.tab_2)
        self.label_20.setGeometry(QtCore.QRect(120, 260, 161, 31))
        self.label_20.setObjectName("label_20")
        self.listView = QtWidgets.QListWidget(self.tab_2)
        self.listView.setGeometry(QtCore.QRect(120, 90, 881, 131))
        self.listView.setStyleSheet("background-color: rgb(221, 221, 221);\n"
"border-radius: 25px;font-size:14pt;font-weight:600; color: rgb(100, 100, 100) ;")
        self.listView.setObjectName("listView")
        self.listView_2 = QtWidgets.QListWidget(self.tab_2)
        self.listView_2.setGeometry(QtCore.QRect(120, 310, 881, 301))
        self.listView_2.setStyleSheet("background-color: rgb(221, 221, 221);\n"
"border-radius: 25px;font-size:14pt;font-weight:600; color: rgb(100, 100, 100) ;")
        self.listView_2.setObjectName("listView_2")
        self.tabWidget.addTab(self.tab_2, "")

        self.retranslateUi(teacherclass)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(teacherclass)
        for t12 in self.classwor :
            self.listWidget.addItem("              "+t12[3]+"              "+t12[1])

        for t12 in self.stu :
            self.listView_2.addItem( "  "+t12[1]  )

        for t12 in self.tea :
            self.listView.addItem( "  "+t12[2]  )

        self.upassign.clicked.connect(self.upasgn)

    def retranslateUi(self, teacherclass):
        _translate = QtCore.QCoreApplication.translate
        teacherclass.setWindowTitle(_translate("teacherclass", "Frame"))
        self.label_6.setText(_translate("teacherclass", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:28pt; font-weight:600; color:#ffffff;\">"+self.sname+"</span></p></body></html>"))
        self.label_7.setText(_translate("teacherclass", "<html><head/><body><p><span style=\" font-size:16pt; font-weight:600; color:#1b93e3;\">Upcoming</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("teacherclass", "Stream"))
        self.label.setText(_translate("teacherclass", "<html><head/><body><p align=\"center\"><span style=\" font-size:16pt; font-weight:600; color:#1ea5ff;\">Name of Assignment</span></p></body></html>"))
        self.upassign.setText(_translate("teacherclass", "Upload reference and Assignment"))
        self.label_2.setText(_translate("teacherclass", "<html><head/><body><p align=\"center\"><span style=\" font-size:16pt; font-weight:600; color:#1ea5ff;\">Due Date</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("teacherclass", "Classwork"))
        self.label_10.setText(_translate("teacherclass", "<html><head/><body><p><span style=\" font-size:16pt; font-weight:600; color:#1b93e3;\">Teacher</span></p></body></html>"))
        self.label_20.setText(_translate("teacherclass", "<html><head/><body><p><span style=\" font-size:16pt; font-weight:600; color:#1b93e3;\">Classmates</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("teacherclass", "People"))

    def upasgn(self):
        try :
            print("up_data")
            fn = filedialog.askopenfilename(title="Select file", filetypes=(("Txt File", "*.txt" ), ("All File", "*.*" ) ))
            data = ""
            with open(fn,"rb") as f :
               data = f.read()
            print(data)
            try :
                conn =  MySQLdb.connect(host="localhost" ,database="class_proj" , user="root" , password="" )
                cursor = conn.cursor()
                ins = "INSERT INTO `coursework` (`Scode`, `due_date`, `attachment`,`details`, `Coursework_id`, `max_points`) VALUES ('"+self.scode+"', '10/10/2020',%s , '--', '"+self.lineEdit.text()+"', '10') "
                cursor.execute(ins,(data , ))
                conn.commit()
            except:
                print("Sql error")
            finally:
                conn.close()

        except Exception as obj :
            print(obj)

    


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Login = QtWidgets.QFrame()
    ui = Ui_Login()
    ui.setupUi(Login)

    Class_Frame = QtWidgets.QFrame()
    ui1 = Ui_Class_Frame("rahul")
     
    Dow_frame = QtWidgets.QFrame()
    studentclass = QtWidgets.QFrame()
    teacherclass = QtWidgets.QFrame()

    Addclass = QtWidgets.QFrame()
    Login.show()
    sys.exit(app.exec_())
